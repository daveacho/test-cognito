name: 'Pull Request on Dev environment'

on:
  pull_request:
    branches:
      - main

    paths:
      - 'terraform/**'
      - 'main.tf'


env:
  TF_LOG: INFO
  TF_INPUT: false

  
permissions:
      id-token: write
      issues: write
      pull-requests: write
      contents: read

jobs: 
  pr-infra-check:
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash
        working-directory: ./terraform

    env:
      TF_VAR_region: eu-west-2
      TF_VAR_projectName: "revolution"
      TF_VAR_environment: "staging"
        
    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout code
      uses: actions/checkout@v4

    # Set up Terraform
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: "1.12.2"

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4 # Updated to latest stable version
      env:
        AWS_REGION: "eu-west-2"
      with:
        role-to-assume: ${{ secrets.AWS_ROLE_ARN }} # Replace with your IAM role ARN
        aws-region: ${{ env.AWS_REGION }}
        role-session-name: GitHubActionsSession

    # Run terraform fmt -check
    - name: Terraform Format
      id: fmt
      run: terraform fmt
      continue-on-error: false # Fail if formatting is incorrect

    # Initialize Terraform
    - name: Terraform Init
      id: init
      run: terraform init

    # Run terraform validate
    - name: Terraform Validate
      id: validate
      run: terraform validate -no-color

    # Generate Terraform plan and capture output
    - name: Terraform Plan
      id: plan
      run: terraform plan -out=tfplan -no-color > plan-output.txt
      continue-on-error: false # Allow plan to fail for PRs to show changes

    # Add a comment to pull requests with plan results
    - name: Add Plan Comment
      id: comment
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const fs = require('fs');
          const planOutput = fs.readFileSync('terraform/plan-output.txt', 'utf8');
          const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
          #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
          #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`
          #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`

          <details><summary>Show Plan</summary>

          \`\`\`terraform\n${planOutput}\n\`\`\`

          </details>

          *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Workflow: \`${{ github.workflow }}\`*`;

          await github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: output
          });


#arn:aws:iam::339713055209:role/test-oidc-role #terraform apply -auto-approve tfplan
#arn:aws:sts::339713055209:assumed-role/github-actions-oidc-ecr-ecs-role/GitHubActionsSessio


